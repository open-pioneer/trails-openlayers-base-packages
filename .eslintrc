{
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:import/typescript",
        "plugin:jsx-a11y/recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:react-hooks/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        // Can be removed once https://github.com/jsx-eslint/eslint-plugin-react/issues/3602 is closed
        "suppressDeprecatedPropertyWarnings": true
    },
    "plugins": [
        "@typescript-eslint",
        "import",
        "unused-imports",
        "header",
        "react",
        "react-hooks",
        "jsx-a11y"
    ],
    "env": {
        "node": true,
        "browser": true
    },
    "root": true,
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/resolver": {
            "typescript": true,
            "node": true
        }
    },
    "rules": {
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        "linebreak-style": ["error", "unix"],
        "quotes": [
            "error",
            "double",
            {
                "avoidEscape": true,
                "allowTemplateLiterals": true
            }
        ],
        "semi": ["error", "always"],

        // Enforce license header
        "header/header": [
            "error",
            "line",
            [
                " SPDX-FileCopyrightText: con terra GmbH and contributors",
                " SPDX-License-Identifier: Apache-2.0"
            ]
        ],

        // Disallow relative import into another package, e.g. `../other-package/foo`
        "import/no-relative-packages": "error",

        // Warn/error for unused imports and variables.
        // Variables can be prefixed with _ to disable the warning when necessary.
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "react/jsx-uses-vars": "error",
        "unused-imports/no-unused-imports": "warn",
        "unused-imports/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "varsIgnorePattern": "^_",
                "args": "after-used",
                "argsIgnorePattern": "^_"
            }
        ],

        // Allow {} again
        "@typescript-eslint/ban-types": [
            "error",
            {
                "extendDefaults": false,
                "types": {
                    "String": {
                        "message": "Use string instead",
                        "fixWith": "string"
                    },
                    "Boolean": {
                        "message": "Use boolean instead",
                        "fixWith": "boolean"
                    },
                    "Number": {
                        "message": "Use number instead",
                        "fixWith": "number"
                    },
                    "Symbol": {
                        "message": "Use symbol instead",
                        "fixWith": "symbol"
                    },
                    "Function": {
                        "message": "Use typed function signatures instead"
                    }
                }
            }
        ]
    },
    "overrides": [
        {
            "files": ["*.test.*"],
            "rules": {
                // Allow non-null assertions in test files
                "@typescript-eslint/no-non-null-assertion": "off"
            }
        }
    ]
}
