{
    "id": "893ae756-9033-41a7-8d14-67c9fcabc6c7",
    "realm": "trails",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "93c38006-b457-484f-af60-2604032af216",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "893ae756-9033-41a7-8d14-67c9fcabc6c7",
                "attributes": {}
            },
            {
                "id": "a1c0adc0-3e60-4274-9466-8f589b4b2066",
                "name": "default-roles-trails",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": ["offline_access", "uma_authorization"],
                    "client": {
                        "account": ["manage-account", "view-profile"]
                    }
                },
                "clientRole": false,
                "containerId": "893ae756-9033-41a7-8d14-67c9fcabc6c7",
                "attributes": {}
            },
            {
                "id": "c6bdf986-6c10-4606-911e-cf66e3260e41",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "893ae756-9033-41a7-8d14-67c9fcabc6c7",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "616c499d-1d27-4568-9ec5-963a73dd6132",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "88377387-4353-4e0a-b914-89b5b6f8b00f",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "8a73af14-bf84-46c9-be64-b16275bb85f5",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": ["query-clients"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "04043242-5a46-4b07-8c17-dd5a5811a5e5",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "47b5d955-af15-4396-b247-a59504fe2afa",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "9db773cc-5219-4f42-84ac-3c75b93dd410",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": ["query-users", "query-groups"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "fcca5912-97ef-4146-84f1-d5268bf7b9f5",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "99eaaa78-7276-4cf2-a702-71d07345e805",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "dd7b59ac-f809-47f4-a92f-4c232bc4d0bd",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "3c603db9-7db1-433a-9b0b-3a0867da2220",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "106e13bf-0ff7-46e5-ad8c-4c4ecfb05d65",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "5581092b-901f-443a-914e-dba9e534899a",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "93876545-ac41-4b8a-9817-9f01e0f6ae4c",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-realms",
                                "manage-realm",
                                "view-clients",
                                "manage-authorization",
                                "query-users",
                                "view-users",
                                "query-groups",
                                "impersonation",
                                "manage-users",
                                "view-events",
                                "view-identity-providers",
                                "query-clients",
                                "view-realm",
                                "manage-clients",
                                "manage-events",
                                "manage-identity-providers",
                                "view-authorization",
                                "create-client"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "0b5edc36-feb3-4950-a431-8345a26fe38e",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "997eb872-0388-46e5-9355-be5b5842023c",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "cb9ea0f9-7d57-4229-9a09-a4997fc2c5b4",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "191b76b2-d97a-49e4-b669-3c92495fef8d",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "9f405ab4-d234-4a4e-8ca4-8a02a1f1f81e",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                },
                {
                    "id": "892baea2-32d7-4e3d-8ce9-a4ded09790f4",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "dbab2602-fa60-4598-9026-e120d1e502d2",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "trails": [],
            "broker": [
                {
                    "id": "08c66e7b-f3ef-49c4-a304-28f6767a3f59",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "3937c2b8-aee8-4400-b941-5e3fe67afbb7",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "3ee14267-5cb3-49f1-8ca3-861dbd1fc1fa",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": ["manage-account-links"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "1f86e62c-3e99-48ee-a76e-4a4f7b57604e",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "a551fb52-752f-4f95-8f5a-6cd04bd39b8b",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": ["view-consent"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "22bfc98a-747f-42d0-ac7a-df0d1d486a59",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "fbe2e2bf-e0fe-482f-8da6-3d5a3a4b80c7",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "3e98c21d-5b5a-4d9e-908a-ff96c2298e59",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "a3b9208e-9de9-4a58-b454-648376dcc515",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                },
                {
                    "id": "fd8db877-6734-43fa-a53e-868ed8979eed",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "a1c0adc0-3e60-4274-9466-8f589b4b2066",
        "name": "default-roles-trails",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "893ae756-9033-41a7-8d14-67c9fcabc6c7"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
        {
            "id": "236bb83c-e146-4957-a40e-f9999d104c48",
            "username": "trails_test_user",
            "firstName": "trails",
            "lastName": "test user",
            "email": "test@example.com",
            "emailVerified": true,
            "enabled": true,
            "createdTimestamp": 1753690758534,
            "totp": false,
            "credentials": [
                {
                    "id": "e60ccb37-476b-402e-acbc-4aac7eec0f06",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1753690788687,
                    "secretData": "{\"value\":\"haa6BD1cViyrPL0mbcqzi+tX85ONzC5AnwZdfSS1LqQ=\",\"salt\":\"VFs216dP/7V+eBgR7p+w3w==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": ["default-roles-trails"],
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": ["offline_access"]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": ["manage-account", "view-groups"]
            }
        ]
    },
    "clients": [
        {
            "id": "c74e40e8-b7c2-4437-b853-d065ce824ef8",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/trails/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/realms/trails/account/*"],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        },
        {
            "id": "5dd4c81f-d642-4f9a-932e-16e760f9dfd9",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/trails/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/realms/trails/account/*"],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "4a3d83e5-01ce-4e4d-9a1d-edf89daa8f20",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        },
        {
            "id": "f42d6fe6-c45d-49cb-931f-275f2b92dc5f",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        },
        {
            "id": "3937c2b8-aee8-4400-b941-5e3fe67afbb7",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "true",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        },
        {
            "id": "dbab2602-fa60-4598-9026-e120d1e502d2",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "true",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        },
        {
            "id": "aa1dc361-561c-4694-aaf0-1cfeceb62154",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/trails/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/admin/trails/console/*"],
            "webOrigins": ["+"],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "ee956902-d4a3-4a6e-a841-37ca2d2058c5",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        },
        {
            "id": "0e1241d5-3ed4-43c5-9d7a-e0728c521ada",
            "clientId": "trails",
            "name": "trails",
            "description": "",
            "rootUrl": "http://localhost:5173/",
            "adminUrl": "http://localhost:5173/",
            "baseUrl": "http://localhost:5173/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["http://localhost:5173/*"],
            "webOrigins": ["*"],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "standard.token.exchange.enabled": "false",
                "post.logout.redirect.uris": "http://localhost:5173/*",
                "frontchannel.logout.session.required": "true",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "pkce.code.challenge.method": "S256",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes": [
        {
            "id": "1a06f0a2-2e1f-4e26-9162-29b8be8768b6",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "8ca6ae29-47df-4ec5-b32c-44bbdfa5dbb0",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "94c5a0d0-786d-4c68-b4b2-f7d2283075ec",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "6a0f47bc-c398-44e0-9041-a0fbe4f23e4b",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "b6ffd0f2-f34e-4d4e-9e6a-e56e4476e92c",
            "name": "saml_organization",
            "description": "Organization Membership",
            "protocol": "saml",
            "attributes": {
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "6d40cb2f-e9fd-483c-821b-dda5b538b578",
                    "name": "organization",
                    "protocol": "saml",
                    "protocolMapper": "saml-organization-membership-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "31f58233-52cb-406f-8e6e-f42c909136d8",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "db622728-0a41-4522-9700-99594b762f48",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "65a907a9-de68-4a9d-a46e-39ac8640b61f",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "bc013861-c111-4c82-83d4-d54220a6ff6b",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "introspection.token.claim": "true",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "e613b4ca-89fc-49b9-9aa5-f3a044a1b733",
            "name": "organization",
            "description": "Additional claims about the organization a subject belongs to",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${organizationScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "0c3b1f32-e409-4b9f-b8d1-b011468b4a1f",
                    "name": "organization",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-organization-membership-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "organization",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "a7258619-873a-4784-9235-3fdbd938c1a8",
            "name": "basic",
            "description": "OpenID Connect scope for add all basic claims to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "aaed6126-70b0-488c-ad69-c1f8ef134191",
                    "name": "sub",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-sub-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "9c48c073-6aec-457b-b850-16d7baf57039",
                    "name": "auth_time",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "AUTH_TIME",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "auth_time",
                        "jsonType.label": "long"
                    }
                }
            ]
        },
        {
            "id": "30c2cdb3-748a-4749-be40-0520e5b63f03",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "6696dc5a-c387-4518-9c2b-53d484493578",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "29ced14a-fc08-421c-b794-2b119382576e",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "62eb1c20-a37d-4610-9ff3-0aac83f436e5",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "051e78c1-ba29-4f9d-beb7-9b79455aefe2",
            "name": "service_account",
            "description": "Specific scope for a client enabled for service accounts",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "24602719-8eed-4bc5-94f7-67d60bb41f0e",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "client_id",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "bf3ce06c-7268-4bac-8b95-1263c366d56b",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "71a7d15a-a091-45ef-b3e7-c402449370f8",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "a54edf51-fef3-415e-b776-8288b5cca166",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "a5ef85f4-21a4-4062-8fa6-28499e9c57c2",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "0b4738d3-0847-42dc-92ab-dcf2a12282d9",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "79f53ca7-077d-4764-a103-e97dab061694",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "3d6be81d-f5b8-414c-87ed-e8685bf65570",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "9fcdf8cf-948b-4ddc-86c5-8aea4d14288a",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "b4b342c8-c298-4e95-ab27-67f48a930f18",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f5db9f56-be07-451e-ac18-47f954485590",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a0da2e39-861d-4fdd-b890-b4a0b6c613aa",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "41bd654f-0937-472c-8bc3-bd7b1aedc08b",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "b4297e5c-7615-42f4-a90d-0cee3521f222",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "8b48c723-44d6-411d-b664-83bf838ee1dd",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "26f083c0-464f-44fd-9eac-a2b19c241a6d",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5201b028-a73a-4f0e-9b93-127d5d840344",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "d561f2ef-4455-4a02-a3ca-1128e2c38bdf",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f0b01720-7a26-4195-a6af-2ec3be6230f3",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "40cb9d52-d063-4820-b4ac-d84a8f9f5492",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "daa201a2-a0b6-443c-b530-56981d67ff19",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5d1011bb-fc25-40e8-89b0-100a6cd07713",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "7a015db7-cee9-4f21-9cf8-576bd41cd070",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "50a7df06-cd26-4d03-b2a8-f58e50aed0ce",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "92a72708-e971-4c94-9764-f9334605c3dc",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "01bae371-b122-4762-a0a1-862bf9c42745",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "532647b0-3853-4752-9444-c45870cf1c07",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "ec75d83d-5820-4b2d-8b54-c4bb86447474",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "saml_organization",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt",
        "organization"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "314f7ce6-7a2a-48cd-a8fe-ceb228723ab2",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": ["true"]
                }
            },
            {
                "id": "859c534c-2bba-4a70-845a-f18cab1dae76",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-role-list-mapper",
                        "oidc-full-name-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-property-mapper"
                    ]
                }
            },
            {
                "id": "1f754f91-bd43-4a10-afde-0db903e36e94",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "df6e4f62-b44c-42dc-b867-c50406a18826",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": ["true"],
                    "client-uris-must-match": ["true"]
                }
            },
            {
                "id": "977dbdaa-0618-4527-81b7-b6b1b674e4e8",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-property-mapper",
                        "oidc-full-name-mapper",
                        "saml-user-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-role-list-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-address-mapper"
                    ]
                }
            },
            {
                "id": "5da45608-3631-4b23-b29f-dc5f5deee410",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": ["200"]
                }
            },
            {
                "id": "8c4cfef9-6f21-4ed7-b88e-b8df3f9f85a7",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "461e300b-e3cd-4c95-a401-fa8d2b42138f",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": ["true"]
                }
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "2db4f049-c96a-49ae-9565-135e852120df",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAlhfbPsrayjHVZvvzhybWEJUD2J/6gzjtcx1ESW7pH8BPkXKHcPNOLnuiECNESvRMO+aMbkGJyZdA14mCR+vx06wFSI67NV2vnItXTp+fCTMiIfSyP1Y2ThBRSgm+ilPbfs2OIbrkAHGpTQoR0sK6vHPT90VaY2rz4hy4KMCoRCQasL07m56yuC0p85eLvFqTZu6DcX6G+y3oWizSbQc2P8qcSC+/TkCWZnCQU7cGTcknhPxlf7ud8iShE5onypSTYMr6uKZ1JPTexoCntM9cI5x51YWXzx9yiIZAzidJzg+XujTPKT4I0jsqVUiesFOXFFd69v484woPg4AgU44H/wIDAQABAoIBAEKxIgXyPCqI3yKOBGVC3+5pUFayqy0gn/28/OlGQ4cMvC5MPht1uQEVhWr3SLKnf7JEHJUnQPLW5wR+wOl1UTR1ZLmbVlr9oHkGP0qbyZ5cXqfI42UaSTIBtSUZVFWBsm/TJXseYI5D8u7c8RN93Fy9eOuQIPw4+1o22aueA4aW9/+JmuIBvTLU9VF9+j+dbcoNuY1LO35oo7W1fPkw61znsZBGHVKV3JMuSpZ5sFmmuyS8gJSZDdxSW5ICkQiRo7SJ3mu5GoZKcUYFYUY4oW9/3kJn5se2k1/ljLlXLV/Qkg+wplvZmI9KWyp4daGPjp4thhFvr79s/rcKsE7tijkCgYEAzBW5Ts9XU8t/xkDSuLsPH99ujSHAwAuL/89wIeJPs4BBSsRWYpjrcoGQDPGqevD9XqQgumd9c8Ifq6RQMXJvckv09IL+D6hxJPsK5bgjTWAbN2mLz+Esi9RtRsC6R/pe1l+h41EKljrdJlZCJ4paOYZSuzVkScb/Cp/WfHSPzacCgYEAvEYfopZXFmAtX2wBzAGuExmvrLisXAbaVS3D943wkHEaIkANBZ4ygaVan3+1JS031l5XIa5IdID97CTL82yrrshrStlwe64qr1nvcOSbf5LkYFk5FFBhEehLjhhGXBkUKUimx6N4/FXAZG+E2ENSRbGaf4d1n5Wv6odsX0X+rekCgYATF5ktYUJHKYt7jYbpFz7T+YALHfQ9QxdGyC4yTUytezsgdnuqX6nvHWXPgDA1riPV3b7eEV5wHOH/mbCS36TDaY2x7is8ZcKn9gBP+0j6LRp+tZYJzYPwVOAgNVl38Fk87tdjP6qg4ULdGka4Ej5ckU9eCiGmsUIcyVU0cWcekwKBgAZjms85qtrniKKkV6tEo1Oim4ORAMhesyoQ04WjG3bLX8epxMdcBvq/UcP34X3RewObT/mkoHDTr8pDtWgdV/Ymdv2jQ13vGyO4OZfrKhu6MGXUoUs/LwwchfPcfwbBEx4TiRVdRs3JWy4NWsS8BB65WDTbs/ImckHTNqpFBc+BAoGBAMMUK/bANoQmxmO0CpDD9mxJRuLz3Pviru4mxMqZGf8ffM46EEzYZa5Elgmb7bEqJOnj9BdM7x7chjCKp3ZV8u2Ol8oezFNc7ppVSy7VKfG0uv/eXmAEvb5Ii5hd6yzS76UwkniTnOaempwyEkpT6FvEssmoyaGpedkf9d1O482H"
                    ],
                    "keyUse": ["SIG"],
                    "certificate": [
                        "MIICmzCCAYMCBgGYQTzypDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZ0cmFpbHMwHhcNMjUwNzI1MTA1NzUwWhcNMzUwNzI1MTA1OTMwWjARMQ8wDQYDVQQDDAZ0cmFpbHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCWF9s+ytrKMdVm+/OHJtYQlQPYn/qDOO1zHURJbukfwE+Rcodw804ue6IQI0RK9Ew75oxuQYnJl0DXiYJH6/HTrAVIjrs1Xa+ci1dOn58JMyIh9LI/VjZOEFFKCb6KU9t+zY4huuQAcalNChHSwrq8c9P3RVpjavPiHLgowKhEJBqwvTubnrK4LSnzl4u8WpNm7oNxfob7LehaLNJtBzY/ypxIL79OQJZmcJBTtwZNySeE/GV/u53yJKETmifKlJNgyvq4pnUk9N7GgKe0z1wjnHnVhZfPH3KIhkDOJ0nOD5e6NM8pPgjSOypVSJ6wU5cUV3r2/jzjCg+DgCBTjgf/AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE5jRdWmm72121j70KuJL4LuK2DgelXtwZZAW9VMc6VFKDHOvfSh67IHcY6FE5Zyv4bGBuRfQ0otVPThLiZDwKy3WeFtMXbxGTmryKSVHx0TfZABD+/CgkKn8aXCG3+m0Uli5qPVA1jhQfVTl6DN92fO7v3tp/2BTQZDs5VZKEouTG47wRWRbCBwWqANEvnlaQ8QqhMTfDFYXo+yValAOx7U3dptXncGbFlx2cCTtrNOmkihjyeOSzFVg6JvGsGQgacHeRJqi2F+CSbUz+xi/QU8i1VdeOGKZRGN5qXSy7A7ljvxASChOx472kuG0MURtkGtbefQVFcDy2SWo09dhas="
                    ],
                    "priority": ["100"]
                }
            },
            {
                "id": "d02798b2-578c-4868-8150-267cc9ebd520",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEpAIBAAKCAQEAjxWHfZGWq/Koo0aHGoKrycVTVUr2ev7+YwFdI4synXRi/mlfsrE9dptaRxhXIbD12Z1euDymtEuCGlTpFXOnCUQlrPPYJutAXim/6AusIsIjasPBQYV54nKc1DSU2BrH/yGd5ZXTPylougTWXuh2HxHrDG4QXZ9PEB17Xji2Rsezoy2t3qCIyYSm18tcmcY1M04avmZBImk0yvsxAxR2tPW68na3e8sw7QufJYMwB93trWh6xRx4U5ioW/+7hlnxG1q20hOj3M2dZxxJhxvVRtnqyd2/ful/DKWff0jYka0CmZHo6A0BqSeIzrF/vjuRXR2/f92PBRvXByc6AoHIQQIDAQABAoIBACBog/PREguIPuIci2VZy4c8Bo//FqztLLlICcyPLruzLOjq/R4APyeqMFyCCto6trS/jEC2nBuiLqnAKbsOIvtaUB5IbOEDz+SEGE96tVZ6GoOIKzGoBd9gjl0SO9Rm3H3RI25o7RwVSP85MUT16itHZ7G9DD/oYYQI6XSB6+dD5Y0XLcp6kEcJFM5qKtvPpvwIKNOqjZkrql5lIfI/bH3mz3bYVMEABcu/B9YWx8m323LN6lhWRAEl67MOLvU08EFcNYEpVNmxNuhdCc8WEWfYbMBw+BfXWpEaqpb7RTCg87+t0LPU78P049or5Tkv1sl+Y+2wsmVs/oID/Yy58LECgYEAxtF7H3Bi7m2UJwuaHhRlFYKSmuaTsg3MXkIWIVd/DJ19UmSo1IPo5P8K53J/sxSV8FFAau8EmxNy3pq7D23mrmxUOJCwsjR3spcVaHO8+hQHAC0CaCD1qg9B2fH88u7ylHaOQHjWEAgoAZv80TNb7DtcoWOER9sf1YJLMQSUf0sCgYEAuDx456rfHb8L0dQTAdmQ0AToZKqUYeaUFcH0Bl46lYdf5T+mFvWYFyktSdt2UHJszpyiEy18TJnc23ePjeQX1NJEqt1PhlXLhlgz0cJQ+2GQRHvr9Qz5hCHuFxAO6YAhWRXzBrURN2znYxELwAu3tCW8MfoNiC3tUD82IseTgyMCgYEAjQ6YvRB+kEzcXOtlV8v+f8lY/F91EFGr2oAmtVcfg7LE9E0IX2aLONUeRmE86rBDRPJQss2Lxf6BdB/xcZv2m2+uPUeipXyGJAX/IVFkFUVaRiyo1Xn08cfLX7bJUQ5oux52BJX2wf8XazThpQc8Q5lGOhaiBl0X8+JyOH/YX4sCgYAchyChns/Vp1OJNjGLQ8ksrNXfYJqBXlbn15SVt9mSddffg6+QNo9KZtHgcd8sLcuzYoWmOpDYu6p7QVQ1QHCAP97qJkK+JmLRdq7veAtaIY1ZTWcIFu48C5T2dUIZ3gFL7h4nl7oGvxJFQMp0/lt/xagShQm7YIEyv9b+I7EvyQKBgQCi2X41Etzr5kXLiJXxdOL7yUrEiO68/dYPIlWJZRsee/X5jrJwCDLTVpTkuO6BG2oftrPX1TENwfflSmcCnYBh+swZ9UPfEgC0x/tZmQ54QmlPG073IL2Y2h7+AE+jJeIREow/qBH+iEKpZ3+6nxve9tSskz5f3fajE8uLpmLpFg=="
                    ],
                    "keyUse": ["ENC"],
                    "certificate": [
                        "MIICmzCCAYMCBgGYQTzzujANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZ0cmFpbHMwHhcNMjUwNzI1MTA1NzUwWhcNMzUwNzI1MTA1OTMwWjARMQ8wDQYDVQQDDAZ0cmFpbHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCPFYd9kZar8qijRocagqvJxVNVSvZ6/v5jAV0jizKddGL+aV+ysT12m1pHGFchsPXZnV64PKa0S4IaVOkVc6cJRCWs89gm60BeKb/oC6wiwiNqw8FBhXnicpzUNJTYGsf/IZ3lldM/KWi6BNZe6HYfEesMbhBdn08QHXteOLZGx7OjLa3eoIjJhKbXy1yZxjUzThq+ZkEiaTTK+zEDFHa09brydrd7yzDtC58lgzAH3e2taHrFHHhTmKhb/7uGWfEbWrbSE6PczZ1nHEmHG9VG2erJ3b9+6X8MpZ9/SNiRrQKZkejoDQGpJ4jOsX++O5FdHb9/3Y8FG9cHJzoCgchBAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIj8yzi29XHRV6ONWTETxSVCQoaBB2NKPlqelFMUF0Zc6hfF1/KbZbiMZNhlC36yRwTlXR4JTtA2L1vvAX1YjmgaS7FT22pfiHlYexRHe/nBnx3kX8Jhhws+2qIwB4CpFgAvskWfOblIlnb/M0otDfk7WPLZ0ZKGocISBitI1eUEXQChb7FxajcUtOIbzv5rYuCS4ze4kyAwUy+IqyaPKJ0on2x2D8y1LksJf5kmF5ntfEE5vq3uNaHGIqF12MVrtZjuuKorsV5HovokN+HxUoVQU+hIzG99hXFMN6+/PoAV1e91kioYwT4L+FQha/v97Hy4ABOo+Z6TKYYzfYZ1boY="
                    ],
                    "priority": ["100"],
                    "algorithm": ["RSA-OAEP"]
                }
            },
            {
                "id": "66a03ae7-7768-412d-b7c0-4d5d4ba821ab",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": ["efb4f6b6-17d5-4bc3-91f1-213ea3b355d7"],
                    "secret": [
                        "Rk2u-d70nyYDzMH7GHtK40iyr1ziNRsXwytLMqRq4XJ7xgDW2o5m5XQCDzGQFx2iXQih1unPLT2ZT9roG_LilduIM8y3dQeEaORWc3XjBCWoUELiRrYc9tHncNrKIllRawOB8ZQcnnOHDlO1APYSl7R72qP8ms3-16FVSWOn8Dc"
                    ],
                    "priority": ["100"],
                    "algorithm": ["HS512"]
                }
            },
            {
                "id": "5779aa0a-b88b-446b-acf8-190200ae866f",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": ["48463ef0-39ef-40b1-8130-8bcb9f9313d8"],
                    "secret": ["VXImzcdewE2BA2d_-17MoA"],
                    "priority": ["100"]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "authenticationFlows": [
        {
            "id": "ba7859bc-d524-4961-af63-18635ae48ebd",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "4a4361ff-92b4-4cbc-ae91-67caeca4b5a5",
            "alias": "Browser - Conditional 2FA",
            "description": "Flow to determine if any 2FA is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "webauthn-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-recovery-authn-code-form",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c806e3c1-fe86-41fd-85f2-b9e5e0c2fa2c",
            "alias": "Browser - Conditional Organization",
            "description": "Flow to determine if the organization identity-first login is to be used",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "organization",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "adadc33e-45a0-4be9-a6f4-4385897a9d96",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "dd153c7b-f9f2-48e6-8adf-ef09d49ee1d4",
            "alias": "First Broker Login - Conditional Organization",
            "description": "Flow to determine if the authenticator that adds organization members is to be used",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "idp-add-organization-member",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "0861c6e4-92d0-4842-baa9-6c8ac679e2c5",
            "alias": "First broker login - Conditional 2FA",
            "description": "Flow to determine if any 2FA is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "webauthn-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-recovery-authn-code-form",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ffa68b8e-1490-49af-8e98-9d9e3d66cc50",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "671504af-6e35-4cd8-83dd-514808847661",
            "alias": "Organization",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional Organization",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "92f9bb76-3eca-40af-952c-57487feed8cb",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "e20f7ea7-37ed-45c7-a861-e2ba40c6c837",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "3b9556d8-125b-4b2c-adc4-7c25d243840e",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional 2FA",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a28290e4-5aab-4911-8678-3e9a1a2a073f",
            "alias": "browser",
            "description": "Browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 26,
                    "autheticatorFlow": true,
                    "flowAlias": "Organization",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7afde5a4-54e6-4645-9b3d-3d1a7d1326c3",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "40f938d4-ec1e-4049-a6dd-30ef80e78b5f",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c4be2582-eacf-41e9-9e66-13c06d5c8b56",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c07bd070-b0d5-45e0-bfa0-5240710efff2",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 50,
                    "autheticatorFlow": true,
                    "flowAlias": "First Broker Login - Conditional Organization",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f47c5d08-a0b3-4393-a375-f1aafb470e7d",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional 2FA",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "96a5fd72-a6ab-459d-aadc-1e8b108325e9",
            "alias": "registration",
            "description": "Registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "9503d822-a37b-45b5-89ff-2d62831b09fe",
            "alias": "registration form",
            "description": "Registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-terms-and-conditions",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 70,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "fa1d80f9-1f96-4680-a733-a700e89232d0",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1fbda065-c5ee-4720-8be4-df542e8bd4a0",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "35f2fcad-9ed0-4107-8f2f-f7b868717f5c",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "7d8d3f69-322b-4c0d-8a01-96df19c783c3",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
        },
        {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
        },
        {
            "alias": "VERIFY_PROFILE",
            "name": "Verify Profile",
            "providerId": "VERIFY_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 90,
            "config": {}
        },
        {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config": {}
        },
        {
            "alias": "idp_link",
            "name": "Linking Identity Provider",
            "providerId": "idp_link",
            "enabled": true,
            "defaultAction": false,
            "priority": 110,
            "config": {}
        },
        {
            "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "name": "Recovery Authentication Codes",
            "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
            "enabled": true,
            "defaultAction": false,
            "priority": 120,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.3.2",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}
